name: CI Pipeline

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: |
          cd infra/aws
          terraform init
      - name: Terraform Validate
        run: |
          cd infra/aws
          terraform validate

  api-ci:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compute lowercase image name
        id: vars
        run: |
          echo "IMAGE_NAME_LC=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build API image (prod)
        run: |
          cd src/api
          docker build -t $REGISTRY/${{ env.IMAGE_NAME_LC }}-api:${{ github.sha }} .

      - name: Build API image (tester)
        run: |
          cd src/api
          docker build --target tester -t $REGISTRY/${{ env.IMAGE_NAME_LC }}-api-tester:${{ github.sha }} .

      - name: Run API tests
        run: |
          cd src/api
          docker run --network host -e REDIS_HOST=localhost \
            $REGISTRY/${{ env.IMAGE_NAME_LC }}-api-tester:${{ github.sha }} \
            pytest -v --cov=app --cov-report=xml

      - name: Snyk security scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}-api:${{ github.sha }}
          args: --severity-threshold=high --policy-path=.snyk

      - name: Snyk monitor
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}-api:${{ github.sha }}
          args: --monitor --policy-path=.snyk

      - name: Trivy security scan
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}-api:${{ github.sha }}
          format: sarif
          exit-code: '1'
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          vuln-type: os,library
          output: trivy-results.sarif

  worker-ci:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build and Test Worker
        run: |
          cd src/worker
          go test -v ./...
          go build -v -o url-shortener-worker